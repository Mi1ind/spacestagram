{"version":3,"sources":["assets/gray.png","routes/CardList.js","routes/SkeletonCardList.js","routes/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","CardListItem","props","_useState","useState","_useState2","Object","slicedToArray","activeLike","setActiveLike","handleToggleLike","useCallback","contentStatus","react_default","a","createElement","MediaCard","title","photoData","primaryAction","content","destructive","onAction","description","explanation","popoverActions","image","navigator","clipboard","writeText","url","src","alt","width","height","className","CardList","Page","map","CardList_CardListItem","skeletonCard","TextContainer","SkeletonDisplayText","SkeletonBodyText","lines","require","SkeletonCardList","AppProvider","i18n","enTranslations","Frame","SkeletonPage","dayPhoto","concat","process","Photo","setPhotoData","useEffect","_fetchPhoto","asyncToGenerator","regenerator_default","mark","_callee","res","data","wrap","_context","prev","next","fetch","sent","json","reverse","stop","apply","this","arguments","fetchPhoto","window","addEventListener","_document$documentEle","document","documentElement","scrollTop","clientHeight","location","reload","routes_CardList","routes_SkeletonCardList","App","reportWebVitals","onPerfEntry","Function","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App_App","getElementById"],"mappings":"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","file":"static/js/main.4007506e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gray.32b5bbcb.png\";","import React, { useState, useCallback } from \"react\";\nimport { Page, MediaCard } from \"@shopify/polaris\";\nimport \"@shopify/polaris/build/esm/styles.css\";\n\nconst CardListItem = (props) => {\n  // Change states for Like button.\n  const [activeLike, setActiveLike] = useState(false);\n  const handleToggleLike = useCallback(\n    () => setActiveLike((activeLike) => !activeLike),\n    []\n  );\n  const contentStatus = activeLike ? \"♥ Dislike\" : \"♥ Like\";\n\n  // Single Media Card render.\n  return (\n    <MediaCard\n      title={props.photoData.title}\n      primaryAction={{\n        content: contentStatus,\n        destructive: activeLike,\n        onAction: handleToggleLike,\n      }}\n      description={props.photoData.explanation}\n      // Share button. Copies url of image to clipboard.\n      popoverActions={[\n        {\n          image:\n            \"https://media.istockphoto.com/vectors/cartoon-rocket-space-ship-simple-spaceship-icon-stock-vector-vector-id1128766183?k=20&m=1128766183&s=170667a&w=0&h=pjFPc4PmaA21UazHXlJuxk87omk1SfrjyFOwMn8str4=\",\n          content: \"Copy '\" + props.photoData.title + \"' to the clipboard.\",\n          onAction: () => {\n            navigator.clipboard.writeText(props.photoData.url);\n          },\n        },\n      ]}\n    >\n      <img\n        src={props.photoData.url}\n        alt={props.photoData.title}\n        width=\"100%\"\n        height=\"100%\"\n        className=\"photo\"\n      />\n    </MediaCard>\n  );\n};\n\n// Display as many cards as required.\nconst CardList = (props) => (\n  <Page title=\"Spacestagram\">\n    {props.photoData.map((photoData) => {\n      return <CardListItem photoData={photoData} />;\n    })}\n  </Page>\n);\n\nexport default CardList;\n","import React from \"react\";\nimport enTranslations from \"@shopify/polaris/locales/en.json\";\nimport {\n  AppProvider,\n  MediaCard,\n  SkeletonPage,\n  SkeletonBodyText,\n  SkeletonDisplayText,\n  TextContainer,\n  Frame,\n} from \"@shopify/polaris\";\n\n// Single Skeleton Card render.\nconst skeletonCard = (\n  <MediaCard\n    title={\n      <TextContainer>\n        <SkeletonDisplayText></SkeletonDisplayText>\n      </TextContainer>\n    }\n    primaryAction={{ content: \"\" }}\n    description={\n      <TextContainer>\n        <SkeletonBodyText lines={10} />\n      </TextContainer>\n    }\n    popoverActions={[{}]}\n  >\n    <img\n      src={require(\"../assets/gray.png\")}\n      alt=\"\"\n      width=\"100%\"\n      height=\"100%\"\n    />\n  </MediaCard>\n);\n\n// Skeleton page render.\nconst SkeletonCardList = () => {\n  return (\n    <div className=\"skeleton-photo\">\n      <AppProvider i18n={enTranslations}>\n        <Frame>\n          <SkeletonPage title=\"Spacestagram\">\n            {skeletonCard}\n            {skeletonCard}\n            {skeletonCard}\n          </SkeletonPage>\n        </Frame>\n      </AppProvider>\n    </div>\n  );\n};\n\nexport default SkeletonCardList;\n","import React, { useState, useEffect } from \"react\";\nimport enTranslations from \"@shopify/polaris/locales/en.json\";\nimport { AppProvider, Frame } from \"@shopify/polaris\";\nimport \"@shopify/polaris/build/esm/styles.css\";\nimport CardList from \"./CardList\";\nimport SkeletonCardList from \"./SkeletonCardList\";\n\nconst nasaApiKey = process.env.REACT_APP_NASA_API_KEY;\nconst apiCallCount = 10;\nconst dayPhoto = `https://api.nasa.gov/planetary/apod?api_key=${nasaApiKey}&count=${apiCallCount}`;\n// const startDate = \"2021-12-25\";\n// const endDate = \"2022-01-07\";\n// const datePhoto = `https://api.nasa.gov/planetary/apod?api_key=${nasaApiKey}&start_date=${startDate}&end_date=${endDate}`;\n\n// Fetch date from NASA's Astronomy Picture of the Day API.\nexport default function Photo() {\n  const [photoData, setPhotoData] = useState(null);\n\n  useEffect(() => {\n    fetchPhoto();\n\n    async function fetchPhoto() {\n      const res = await fetch(\n        dayPhoto\n        // datePhoto\n      );\n      const data = await res.json();\n      setPhotoData(data.reverse());\n    }\n  }, []);\n\n  // Swipe to refresh page.\n  window.addEventListener(\"scroll\", () => {\n    const { scrollTop, clientHeight } = document.documentElement;\n    if (scrollTop + clientHeight <= clientHeight) {\n      window.location.reload();\n    }\n  });\n\n  // Display Skeleton page while data is fetched from NASA's API.\n  if (!photoData) return <SkeletonCardList />;\n\n  // Render CardList.js which display's API data.\n  return (\n    <div className=\"nasa-photo\">\n      <AppProvider i18n={enTranslations}>\n        <Frame>\n          <CardList photoData={photoData} />\n        </Frame>\n      </AppProvider>\n    </div>\n  );\n}\n","import \"./App.css\";\nimport React from \"react\";\nimport HomePage from \"./routes/HomePage.js\";\n\nexport default function App() {\n  return <HomePage />;\n}\n\n// export default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}